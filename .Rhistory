test <- read.csv("test.csv")
train <- read.csv("train.csv")
library (tidyverse)
str(train)
colSums(sapply(train, is.na))
dataset.combined <- rbind(within(train, rm('Id','SalePrice')), within(test, rm('Id')))
library (tidyverse)
library (corrplot)
install.packages(corrplot)
install.packages("corrplot")
dataset.combined[is.na]
View(test)
dataset.combined[is.na(dataset.combined$Alley)]
View(dataset.combined)
View(dataset.combined)
View(dataset.combined)
library (tidyverse)
library (corrplot)
install.packages(corrplot)
install.packages('corrplot')
install.packages("corrplot")
test
df_train = train
df_test = test
df_train$Id = NULL
df_test$Id = NULL
df_train$Alley=NULL
df_train$PoolQC=NULL
df_train$Fence=NULL
df_train$MiscFeature=NULL
df_test$Alley=NULL
df_test$PoolQC=NULL
df_test$Fence=NULL
df_test$MiscFeature=NULL
for(i in 1:ncol(df_train)){
if (class(df_train[,i]) == "factor") {
df_train[,i] <- as.numeric(as.factor(df_train[,i]))
}
}
for(i in 1:ncol(df_test)){
if (class(df_test[,i]) == "factor") {
df_test[,i] <- as.numeric(as.factor(df_test[,i]))
}
}
for(i in 1:ncol(df_train)){
if (sum(is.na(df_train[,i])) > 0) {
df_train[i][is.na(df_train[i])] <- round(mean(df_train[,i], na.rm = TRUE))
}
}
for(i in 1:ncol(df_test)){
if (sum(is.na(df_test[,i])) > 0) {
df_test[i][is.na(df_test[i])] <- round(mean(df_test[,i], na.rm = TRUE))
}
}
x=cor(df_train[,unlist(lapply(df_train, is.numeric))])
corrplot(x, type="upper", order="hclust", method="circle",tl.cex = 0.4)
x=model.matrix(SalePrice~.-1,data=df_train)
y=df_train$SalePrice
test <- read.csv("test.csv")
train <- read.csv("train.csv")
?lm
library (tidyverse)
library (corrplot)
test <- read.csv("test.csv")
train <- read.csv("train.csv")
colSums(sapply(train, is.na))
sort(colSums(sapply(train, is.na)))
sort(colSums(sapply(train, is.na)), reverse = TRUE)
?sort
sort(colSums(sapply(train, is.na)), decreasing =  TRUE)
View(test)
View(test)
View(test)
#sort(colSums(sapply(train, is.na)), decreasing =  TRUE)
if ( colSums(sapply(train, is.na) > 1) {
nrow(test$Street)
nrow(test$OverallQual)
colMeans(is.na(train))
apply(x, 2, function(col)sum(is.na(col))/length(col))
apply(train, 2, function(col)sum(is.na(col))/length(col))
sort(colMeans(is.na(train)), decreasing = True)
sort(colMeans(is.na(train)), decreasing = TRUE)
sort(colSums(sapply(train, is.na)), decreasing =  TRUE)
sort(colMeans(is.na(train)), decreasing = TRUE)
cl_train = train
cl_test = test
cl_train$PoolQC = NULL
cl_train$MiscFeature = NULL
cl_train$Alley = NULL
cl_train$Fence = NULL
cl_train$FireplaceQu= NULL
cl_train$LotFrontage = NULL
cl_test$PoolQC = NULL
cl_test$MiscFeature = NULL
cl_test$Alley = NULL
cl_test$Fence = NULL
cl_test$FireplaceQu= NULL
cl_test$LotFrontage = NULL
for(i in 1:ncol(cl_train)){
if (class(cl_train[,i]) == "factor") {
cl_train[,i] <- as.numeric(as.factor(cl_train[,i]))
}
}
for(i in 1:ncol(cl_test)){
if (class(cl_test[,i]) == "factor") {
cl_test[,i] <- as.numeric(as.factor(cl_test[,i]))
}
}
for(i in 1:ncol(cl_train)){
if (sum(is.na(cl_train[,i])) > 0) {
cl_train[i][is.na(cl_train[i])] <- round(mean(cl_train[,i], na.rm = TRUE))
}
}
for(i in 1:ncol(cl_test)){
if (sum(is.na(cl_test[,i])) > 0) {
cl_test[i][is.na(cl_test[i])] <- round(mean(cl_test[,i], na.rm = TRUE))
}
}
dfnew <- data.frame(cl_train$OverallQual, cl_train$GrLivArea, cl_train$GarageCars, cl_train$GarageArea,
cl_train$TotalBsmtSF, cl_train$X1stFlrSF, cl_train$FullBath, cl_train$TotRmsAbvGrd,
cl_train$YearBuilt)
dfnew <- data.frame(cl_train$OverallQual, cl_train$GrLivArea, cl_train$GarageCars, cl_train$GarageArea,
cl_train$TotalBsmtSF, cl_train$X1stFlrSF, cl_train$FullBath, cl_train$TotRmsAbvGrd,
cl_train$YearBuilt)
install.packages("xgboost")
simplemodel <- lm(train$SalePrice ~ OverallQual + Neighborhood + LogGrLivArea + ExterQual + KitchenQual + Age + GarageCars + TotalBsmtSF + X1stFlrSF + GarageArea, data = cl_train[1:nrow(tr),])
simplemodel <- lm(train$SalePrice ~ OverallQual + Neighborhood + LogGrLivArea + ExterQual + KitchenQual + Age + GarageCars + TotalBsmtSF + X1stFlrSF + GarageArea, data = cl_train[1:nrow(cl_train),])
simplemodel <- lm(train$SalePrice ~ OverallQual + Neighborhood + GrLivArea + ExterQual + KitchenQual + Age + GarageCars + TotalBsmtSF + X1stFlrSF + GarageArea, data = cl_train[1:nrow(cl_train),])
simplemodel <- lm(train$SalePrice ~ OverallQual + Neighborhood + GrLivArea + ExterQual + KitchenQual  + GarageCars + TotalBsmtSF + X1stFlrSF + GarageArea, data = cl_train[1:nrow(cl_train),])
summary(simplemodel)
#LogPrice.test <- predict(simplemodel, newdata = features[(nrow(tr)+1):nrow(features),])
Price.test <- predict(simplemodel, newdata = cl_train[(nrow(cl_train)+1):nrow(cl_train),])
library (tidyverse)
library (corrplot)
test <- read.csv("test.csv")
train <- read.csv("train.csv")
hist(train$SalePrice)
train$LogSalePrice <- log(train$SalePrice)
hist(train$LogSalePrice)
library (corrplot)
library (tidyverse)
library (corrplot)
library(tidyr)
?gather
data %>%
gather(-y_value, key = "SalePrices", value = "Alley") %>%
ggplot(aes(x = SalePrice, y = y_value)) +
geom_point() +
facet_wrap(~ SalePrice, scales = "free")
train %>%
gather(-y_value, key = "SalePrices", value = "Alley") %>%
ggplot(aes(x = SalePrice, y = y_value)) +
geom_point() +
facet_wrap(~ SalePrice, scales = "free")
train %>%
gather(-train$SalePrice, key = "SalePrice", value = "Alley") %>%
ggplot(aes(x = SalePrice, y = y_value)) +
geom_point() +
facet_wrap(~ SalePrice, scales = "free")
train %>%
gather(-train$SalePrice, key = "SalePrice", value = "Alley") %>%
ggplot(aes(x = SalePrice, y = train$SalePrice)) +
geom_point() +
facet_wrap(~ SalePrice, scales = "free")
train %>%
gather(-SalePrice, key = "var", value = "value") %>%
head()
View(train)
train %>%
gather(-SalePrice, -BsmtCond, -OverallCond, -FullBath key = "var", value = "value") %>%
train %>%
gather(-SalePrice, -BsmtCond, -OverallCond, -FullBath, key = "var", value = "value") %>%
head()
train %>%
gather(-SalePrice, -BsmtCond, -OverallCond, -FullBath, key = "var", value = "value") %>%
ggplot(aes(x = value, y = SalePrice, color = hp)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
train %>%
gather(-SalePrice, -BsmtCond, -OverallCond, -FullBath, key = "var", value = "value") %>%
ggplot(aes(x = value, y = SalePrice)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
train %>%
gather(-SalePrice, -OverallCond, key = "var", value = "value") %>%
ggplot(aes(x = value, y = SalePrice)) +
geom_point() +
facet_wrap(~ var, scales = "free") +
theme_bw()
train[train$GrLivArea>4000&train$SalePrice<2e+05,]$GrLivArea <- mean(train$GrLivArea)%>%as.numeric
ggplot(train,aes(y=SalePrice,x=GrLivArea))+ggtitle("With Outliers")+geom_point()
ggplot(train,aes(y=SalePrice,x=YearBuilt))+ggtitle("")+geom_point()
ggplot(train,aes(y=LogSalePrice,x=YearBuilt))+ggtitle("")+geom_point()
ggplot(train,aes(y=SalePrice,x=YearBuilt))+ggtitle("")+geom_point()
ggplot(train,aes(y=SalePrice,x=X1stFlrSF))+ggtitle("")+geom_point()
train[train$GrLivArea>4000&train$SalePrice<2e+05,]$GrLivArea <- mean(train$GrLivArea)%>%as.numeric
ggplot(train,aes(y=SalePrice,x=X1stFlrSF))+ggtitle("")+geom_point()
ggplot(train,aes(y=SalePrice,x=X1stFlrSF))+ggtitle("")+geom_point()
train[train$X1stFlrSF>4000&train$SalePrice<2e+05,]$X1stFlrSF <- mean(train$X1stFlrSF)%>%as.numeric
ggplot(train,aes(y=SalePrice,x=X1stFlrSF))+ggtitle("")+geom_point()
train[train$X1stFlrSF>4000,]$X1stFlrSF <- mean(train$X1stFlrSF)%>%as.numeric
ggplot(train,aes(y=SalePrice,x=LotArea))+ggtitle("")+geom_point()
train[train$LotArea>100000,]$LotArea <- mean(train$LotArea)%>%as.numeric
ggplot(train,aes(y=SalePrice,x=LotArea))+ggtitle("")+geom_point()
sort(colSums(sapply(train, is.na)), decreasing =  TRUE)
dsFull <- rbind(train,test)
test$SalePrice <- as.numeric(0)
test$logSalePrice <- as.numeric(0)
dsFull <- rbind(train,test)
test$SalePrice <- as.numeric(0)
test$LogSalePrice <- as.numeric(0)
dsFull <- rbind(train,test)
View(test)
test$logSalePrice <- NULL
test$SalePrice <- as.numeric(0)
test$LogSalePrice <- as.numeric(0)
dsFull <- rbind(train,test)
View(dsFull)
sort(colSums(sapply(train, is.na)), decreasing =  TRUE)
sort(colSums(sapply(train, is.na)), decreasing =  TRUE)
sort(colSums(sapply(dsFull, is.na)), decreasing =  TRUE)
sort(colSums(sapply(dsFull, is.na)), decreasing =  TRUE)
dsFull$LotFrontage[is.na(dsFull$LotFrontage)] <- mean(dsFull$LotFrontage)
dsFull$MasVnrArea[is.na(dsFull$MasVnrArea)] <- 0
dsFull$GarageYrBlt[is.na(dsFull$GarageYrBlt)] <- 0
dsFull$BsmtFullBath[is.na(dsFull$BsmtFullBath)] <- 0
dsFull$BsmtHalfBath[is.na(dsFull$BsmtHalfBath)] <- 0
dsFull$BsmtFinSF1[is.na(dsFull$BsmtFinSF1)] <- 0
dsFull$BsmtFinSF2[is.na(dsFull$BsmtFinSF2)] <- 0
dsFull$BsmtUnfSF[is.na(dsFull$BsmtUnfSF)] <- 0
dsFull$TotalBsmtSF[is.na(dsFull$TotalBsmtSF)] <- 0
dsFull$GarageCars[is.na(dsFull$GarageCars)] <- 0
dsFull$GarageArea[is.na(dsFull$GarageArea)] <- 0
dsFull$PoolQC<- recode(dsFull$PoolQC,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$Alley<- recode(dsFull$Alley,"None"=0,"Grvl"=1,"Pave"=2)
dsFull$Fence<- recode(dsFull$Fence,"None"=0,"MnWw"=1,"GdWo"=2,"MnPrv"=3,"GdPrv"=4)
dsFull$FireplaceQu<- recode(dsFull$FireplaceQu,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$GarageFinish<- recode(dsFull$GarageFinish,"None"=0,"Unf"=1,"RFn"=2,"Fin"=3)
dsFull$GarageQual<- recode(dsFull$GarageQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$GarageCond<- recode(dsFull$GarageCond,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$GarageType<- recode(dsFull$GarageType,"None"=0,"2Types"=1,"Attchd"=2,"Basment"=3,"BuiltIn"=4,"CarPort"=5, "Detchd" = 6)
dsFull$BsmtCond<- recode(dsFull$BsmtCond,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$BsmtExposure<- recode(dsFull$BsmtExposure,"None"=0,"No"=1,"Mn"=2,"Av"=3,"Gd"=4)
dsFull$BsmtQual<- recode(dsFull$BsmtQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$ExterQual<- recode(dsFull$ExterQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$ExterCond<- recode(dsFull$ExterCond,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$BsmtFinType1<- recode(dsFull$BsmtFinType1,"None"=0,"Unf"=1,"LwQ"=2,"Rec"=3,"BLQ"=4,"ALQ"=5,"GLQ"=6)
dsFull$BsmtFinType2<- recode(dsFull$BsmtFinType2,"None"=0,"Unf"=1,"LwQ"=2,"Rec"=3,"BLQ"=4,"ALQ"=5,"GLQ"=6)
dsFull$HeatingQC<- recode(dsFull$HeatingQC,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$KitchenQual<- recode(dsFull$KitchenQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$Functional<- recode(dsFull$Functional,"None"=0,"Sev"=1,"Maj2"=2,"Maj1"=3,"Mod"=4,"Min2"=5,"Min1"=6,"Typ"=7)
#Adding an important feature - Total area of basement
dsFull$TotalSF = dsFull$TotalBsmtSF + dsFull$X1stFlrSF + dsFull$X2ndFlrSF
for(i in 1:ncol(dsFull)){
if (class(dsFull[,i]) == "factor") {
dsFull[,i] <- as.numeric(as.factor(dsFull[,i]))
}
}
str(dsFull)
train.2 <- dsFull[1:1460,]
test.2 <- dsFull[1461:2919,]
library (tidyverse)
library (corrplot)
library(Metrics)
library (tidyverse)
library (corrplot)
library(tidyr)
library(Metrics)
?predict
LR <-lm(formula = SalePrice ~., data = train.2)
dsFull$PoolQC<- recode(dsFull$PoolQC,"NA"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
View(dsFull)
?recode
library (tidyverse)
library (corrplot)
library(tidyr)
library (tidyverse)
library (corrplot)
library(tidyr)
test <- read.csv("test.csv")
train <- read.csv("train.csv")
hist(train$SalePrice)
train$LogSalePrice <- log(train$SalePrice)
hist(train$LogSalePrice)
train[train$GrLivArea>4000&train$SalePrice<2e+05,]$GrLivArea <- mean(train$GrLivArea)%>%as.numeric
train[train$X1stFlrSF>4000,]$X1stFlrSF <- mean(train$X1stFlrSF)%>%as.numeric
train[train$LotArea>100000,]$LotArea <- mean(train$LotArea)%>%as.numeric
ggplot(train,aes(y=SalePrice,x=GrLivAreea))+ggtitle("plots")+geom_point()
ggplot(train,aes(y=SalePrice,x=GrLivArea))+ggtitle("plots")+geom_point()
ggplot(train,aes(y=SalePrice,x=X1stFlrSF))+ggtitle("")+geom_point()
ggplot(train,aes(y=SalePrice,x=LotArea))+ggtitle("")+geom_point()
sort(colSums(sapply(train, is.na)), decreasing =  TRUE)
test$SalePrice <- as.numeric(0)
test$LogSalePrice <- as.numeric(0)
dsFull <- rbind(train,test)
sort(colSums(sapply(dsFull, is.na)), decreasing =  TRUE)
dsFull$LotFrontage[is.na(dsFull$LotFrontage)] <- mean(dsFull$LotFrontage)
dsFull$MasVnrArea[is.na(dsFull$MasVnrArea)] <- 0
dsFull$GarageYrBlt[is.na(dsFull$GarageYrBlt)] <- 0
dsFull$BsmtFullBath[is.na(dsFull$BsmtFullBath)] <- 0
dsFull$BsmtHalfBath[is.na(dsFull$BsmtHalfBath)] <- 0
dsFull$BsmtFinSF1[is.na(dsFull$BsmtFinSF1)] <- 0
dsFull$BsmtFinSF2[is.na(dsFull$BsmtFinSF2)] <- 0
dsFull$BsmtUnfSF[is.na(dsFull$BsmtUnfSF)] <- 0
dsFull$TotalBsmtSF[is.na(dsFull$TotalBsmtSF)] <- 0
dsFull$GarageCars[is.na(dsFull$GarageCars)] <- 0
dsFull$GarageArea[is.na(dsFull$GarageArea)] <- 0
dsFull$PoolQC<- recode(dsFull$PoolQC,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$Alley<- recode(dsFull$Alley,"None"=0,"Grvl"=1,"Pave"=2)
dsFull$Fence<- recode(dsFull$Fence,"None"=0,"MnWw"=1,"GdWo"=2,"MnPrv"=3,"GdPrv"=4)
dsFull$FireplaceQu<- recode(dsFull$FireplaceQu,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$GarageFinish<- recode(dsFull$GarageFinish,"None"=0,"Unf"=1,"RFn"=2,"Fin"=3)
dsFull$GarageQual<- recode(dsFull$GarageQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$GarageCond<- recode(dsFull$GarageCond,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$GarageType<- recode(dsFull$GarageType,"None"=0,"2Types"=1,"Attchd"=2,"Basment"=3,"BuiltIn"=4,"CarPort"=5, "Detchd" = 6)
dsFull$BsmtCond<- recode(dsFull$BsmtCond,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$BsmtExposure<- recode(dsFull$BsmtExposure,"None"=0,"No"=1,"Mn"=2,"Av"=3,"Gd"=4)
dsFull$BsmtQual<- recode(dsFull$BsmtQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$ExterQual<- recode(dsFull$ExterQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$ExterCond<- recode(dsFull$ExterCond,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$BsmtFinType1<- recode(dsFull$BsmtFinType1,"None"=0,"Unf"=1,"LwQ"=2,"Rec"=3,"BLQ"=4,"ALQ"=5,"GLQ"=6)
dsFull$BsmtFinType2<- recode(dsFull$BsmtFinType2,"None"=0,"Unf"=1,"LwQ"=2,"Rec"=3,"BLQ"=4,"ALQ"=5,"GLQ"=6)
dsFull$HeatingQC<- recode(dsFull$HeatingQC,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$KitchenQual<- recode(dsFull$KitchenQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$Functional<- recode(dsFull$Functional,"None"=0,"Sev"=1,"Maj2"=2,"Maj1"=3,"Mod"=4,"Min2"=5,"Min1"=6,"Typ"=7)
#Adding an important feature - Total area of basement
dsFull$TotalSF = dsFull$TotalBsmtSF + dsFull$X1stFlrSF + dsFull$X2ndFlrSF
train.2 <- dsFull[1:1460,]
test.2 <- dsFull[1461:2919,]
LR <-lm(formula = SalePrice ~., data = train.2)
LR <-lm(formula = SalePrice ~., data = train.2)
sort(colSums(sapply(dsFull, is.na)), decreasing =  TRUE)
for(i in 1:ncol(dsFull)){
if (sum(is.na(dsFull[,i])) > 0) {
dsFull[i][is.na(dsFull[i])] <- 0))
for(i in 1:ncol(dsFull)){
if (sum(is.na(dsFull[,i])) > 0) {
dsFull[i][is.na(dsFull[i])] <- 0
}
}
sort(colSums(sapply(dsFull, is.na)), decreasing =  TRUE)
train.2 <- dsFull[1:1460,]
test.2 <- dsFull[1461:2919,]
LR <-lm(formula = SalePrice ~., data = train.2)
LR <-lm(formula = SalePrice ~. -MiscFeature , data = train.2)
LR <-lm(formula = SalePrice ~. -MiscFeature -MasVnrType, data = train.2)
LR <-lm(formula = SalePrice ~. -MiscFeature -MasVnrType - MsZoning, data = train.2)
LR <-lm(formula = SalePrice ~. -MiscFeature -MasVnrType - MSZoning, data = train.2)
for(i in 1:ncol(dsFull)){
if (sum(is.na(dsFull[,i])) > 0) {
dsFull[i][is.na(dsFull[i])] <- 0
}
}
sort(colSums(sapply(dsFull, is.na)), decreasing =  TRUE)
dsFull$PoolQC<- recode(dsFull$PoolQC,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$Alley<- recode(dsFull$Alley,"None"=0,"Grvl"=1,"Pave"=2)
dsFull$Fence<- recode(dsFull$Fence,"None"=0,"MnWw"=1,"GdWo"=2,"MnPrv"=3,"GdPrv"=4)
dsFull$FireplaceQu<- recode(dsFull$FireplaceQu,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$GarageFinish<- recode(dsFull$GarageFinish,"None"=0,"Unf"=1,"RFn"=2,"Fin"=3)
dsFull$GarageQual<- recode(dsFull$GarageQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$GarageCond<- recode(dsFull$GarageCond,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$GarageType<- recode(dsFull$GarageType,"None"=0,"2Types"=1,"Attchd"=2,"Basment"=3,"BuiltIn"=4,"CarPort"=5, "Detchd" = 6)
dsFull$BsmtCond<- recode(dsFull$BsmtCond,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$BsmtExposure<- recode(dsFull$BsmtExposure,"None"=0,"No"=1,"Mn"=2,"Av"=3,"Gd"=4)
dsFull$BsmtQual<- recode(dsFull$BsmtQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$ExterQual<- recode(dsFull$ExterQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$ExterCond<- recode(dsFull$ExterCond,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$BsmtFinType1<- recode(dsFull$BsmtFinType1,"None"=0,"Unf"=1,"LwQ"=2,"Rec"=3,"BLQ"=4,"ALQ"=5,"GLQ"=6)
dsFull$BsmtFinType2<- recode(dsFull$BsmtFinType2,"None"=0,"Unf"=1,"LwQ"=2,"Rec"=3,"BLQ"=4,"ALQ"=5,"GLQ"=6)
dsFull$HeatingQC<- recode(dsFull$HeatingQC,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$KitchenQual<- recode(dsFull$KitchenQual,"None"=0,"Po"=1,"Fa"=2,"TA"=3,"Gd"=4,"Ex"=5)
dsFull$Functional<- recode(dsFull$Functional,"None"=0,"Sev"=1,"Maj2"=2,"Maj1"=3,"Mod"=4,"Min2"=5,"Min1"=6,"Typ"=7)
dsFull$MSZoning<- recode(dsFull$MSZoning,"None"=0,"A"=1,"C"=2,"FV"=3,"I"=4,"RH"=5,"RL"=6,"RP"=7, "RM" = 8)
#Adding an important feature - Total area of basement
dsFull$TotalSF = dsFull$TotalBsmtSF + dsFull$X1stFlrSF + dsFull$X2ndFlrSF
for(i in 1:ncol(dsFull)){
if (sum(is.na(dsFull[,i])) > 0) {
dsFull[i][is.na(dsFull[i])] <- 0
}
}
sort(colSums(sapply(dsFull, is.na)), decreasing =  TRUE)
dsFull$Utilities[is.na(dsFull$Utilities)] <- "AllPub"
for(i in 1:ncol(dsFull)){
if (sum(is.na(dsFull[,i])) > 0) {
dsFull[i][is.na(dsFull[i])] <- 0
}
}
dsFull$MiscFeature<- recode(dsFull$MiscFeature,"None"=0,"Elev"=1,"Gar2"=2,"Othr"=3,"Shed"=4,"TenC"=5)
dsFull$MasVnrType[is.na(dsFull$ManVnrType)] <- "None"
dsFull$Utilities[is.na(dsFull$Utilities)] <- "AllPub"
dsFull$Exterior1st[is.na(dsFull$Exterior1st)] <- "VinylSd"
dsFull$Exterior2nd[is.na(dsFull$Exterior2nd)] <- "VinylSd"
dsFull$Electrical[is.na(dsFull$Electrical)] <- "SBrkr"
dsFull$SaleType[is.na(dsFull$SaleType)] <- "WD"
sort(colSums(sapply(dsFull, is.na)), decreasing =  TRUE)
for(i in 1:ncol(dsFull)){
if (sum(is.na(dsFull[,i])) > 0) {
dsFull[i][is.na(dsFull[i])] <- 0
}
}
sort(colSums(sapply(dsFull, is.na)), decreasing =  TRUE)
train.2 <- dsFull[1:1460,]
test.2 <- dsFull[1461:2919,]
LR <-lm(formula = SalePrice ~. -MiscFeature -MasVnrType - MSZoning, data = train.2)
summary(LR)
predictionLr<- predict(LR,validation, type="response")
LR <-lm(formula = SalePrice ~. -MiscFeature -MasVnrType - MSZoning, data = train.2)
summary(LR)
predictionLr<- predict(LR, type="response")
rmse(train.2$SalePrice,predictionLR)
LR <-lm(formula = SalePrice ~. -MiscFeature -MasVnrType - MSZoning, data = train.2)
summary(LR)
predictionLr<- predict(LR, type="response")
rmse(train.2$SalePrice,predictionLr)
LR <-lm(formula = SalePrice ~., data = train.2)
summary(LR)
predictionLr<- predict(LR, type="response")
rmse(train.2$SalePrice,predictionLr)
predictionLr
LR <-lm(formula = SalePrice ~., data = train.2)
summary(LR)
predictionLr<- predict(LR,train.2$SalePrice type="response")
LR <-lm(formula = SalePrice ~., data = train.2)
summary(LR)
predictionLr<- predict(LR,train.2$SalePrice, type="response")
?predict
LR <-lm(formula = SalePrice ~., data = train.2)
summary(LR)
predictionLr<- predict(LR,test, type="response")
predictionLr<- predict(LR,test.2, type="response")
rmse(train.2$SalePrice,predictionLr)
predictionLr<- predict(LR, type="response")
rmse(train.2$SalePrice,predictionLr)
predictionLr<- predict(LR,train.2$SalePrice, type="response")
predictionLr<- predict(LR,train.2, type="response")
rmse(train.2$SalePrice,predictionLr)
install.packages("caret")
trainF <- dsFull[1:1460,]
testF <- dsFull[1461:2919,]
in_train <- createDataPartition(trainF$SalePrice,p=0.7,list=F)
library(caret)
trainF <- dsFull[1:1460,]
testF <- dsFull[1461:2919,]
in_train <- createDataPartition(trainF$SalePrice,p=0.7,list=F)
train3 <- trainF[in_train,]
validation <- trainFcr[-in_train,]
library(caret)
trainF <- dsFull[1:1460,]
testF <- dsFull[1461:2919,]
in_train <- createDataPartition(trainF$SalePrice,p=0.7,list=F)
train3 <- trainF[in_train,]
validation <- trainF[-in_train,]
lr <-lm(formula = SalePrice ~., data = train3)
